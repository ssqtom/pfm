<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssq.pfm.dao.IncomeDataMapper" >
  <resultMap id="BaseResultMap" type="com.ssq.pfm.model.IncomeData" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="INCOME_USER_ID" property="incomeUserId" jdbcType="BIGINT" />
    <result column="INCOME_TYPE" property="incomeType" jdbcType="CHAR" />
    <result column="INCOME_TOTAL" property="incomeTotal" jdbcType="DOUBLE" />
    <result column="INCOME_DATE" property="incomeDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, INCOME_USER_ID, INCOME_TYPE, INCOME_TOTAL, INCOME_DATE, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from INCOME_DATA
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from INCOME_DATA
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ssq.pfm.model.IncomeData" >
    insert into INCOME_DATA (ID, INCOME_USER_ID, INCOME_TYPE, 
      INCOME_TOTAL, INCOME_DATE, CREATE_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{incomeUserId,jdbcType=BIGINT}, #{incomeType,jdbcType=CHAR}, 
      #{incomeTotal,jdbcType=DOUBLE}, #{incomeDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ssq.pfm.model.IncomeData" >
    insert into INCOME_DATA
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="incomeUserId != null" >
        INCOME_USER_ID,
      </if>
      <if test="incomeType != null" >
        INCOME_TYPE,
      </if>
      <if test="incomeTotal != null" >
        INCOME_TOTAL,
      </if>
      <if test="incomeDate != null" >
        INCOME_DATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="incomeUserId != null" >
        #{incomeUserId,jdbcType=BIGINT},
      </if>
      <if test="incomeType != null" >
        #{incomeType,jdbcType=CHAR},
      </if>
      <if test="incomeTotal != null" >
        #{incomeTotal,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null" >
        #{incomeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssq.pfm.model.IncomeData" >
    update INCOME_DATA
    <set >
      <if test="incomeUserId != null" >
        INCOME_USER_ID = #{incomeUserId,jdbcType=BIGINT},
      </if>
      <if test="incomeType != null" >
        INCOME_TYPE = #{incomeType,jdbcType=CHAR},
      </if>
      <if test="incomeTotal != null" >
        INCOME_TOTAL = #{incomeTotal,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null" >
        INCOME_DATE = #{incomeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssq.pfm.model.IncomeData" >
    update INCOME_DATA
    set INCOME_USER_ID = #{incomeUserId,jdbcType=BIGINT},
      INCOME_TYPE = #{incomeType,jdbcType=CHAR},
      INCOME_TOTAL = #{incomeTotal,jdbcType=DOUBLE},
      INCOME_DATE = #{incomeDate,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>